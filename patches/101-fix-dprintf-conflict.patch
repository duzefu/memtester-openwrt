From 3529ccdf5b6d9416865cc67287a3e9d0dceb3ecf Mon Sep 17 00:00:00 2001
From: "Zefu.Du" <zefu.du@gl-inet.com>
Date: Mon, 27 May 2024 20:55:51 -0700
Subject: [PATCH] 2

---
 tests.c | 92 ++++++++++++++++++++++++++++-----------------------------
 1 file changed, 46 insertions(+), 46 deletions(-)

diff --git a/tests.c b/tests.c
index c61f166..5a7bcc1 100644
--- a/tests.c
+++ b/tests.c
@@ -26,7 +26,7 @@
 int quiet = 0;
 char progress[] = "-\\|/";
 
-void inline dprintf(const char *format, ...) {
+static void inline tprintf(const char *format, ...) {
     if(!quiet) {
         va_list ap;
         va_start(ap, format);
@@ -76,16 +76,16 @@ int test_stuck_address(ulv *bufa, size_t count) {
     printf("           ");
     fflush(stdout);
     for (j = 0; j < 16; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         p1 = (ulv *) bufa;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         for (i = 0; i < count; i++) {
             *p1 = ((j + i) % 2) == 0 ? (ul) p1 : ~((ul) p1);
             *p1++;
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         p1 = (ulv *) bufa;
         for (i = 0; i < count; i++, p1++) {
@@ -108,7 +108,7 @@ int test_stuck_address(ulv *bufa, size_t count) {
             }
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -129,7 +129,7 @@ int test_random_value(ulv *bufa, ulv *bufb, size_t count) {
             fflush(stdout);
         }
     }
-    dprintf("\b \b");
+    tprintf("\b \b");
     fflush(stdout);
     return compare_regions(bufa, bufb, count);
 }
@@ -237,23 +237,23 @@ int test_solidbits_comparison(ulv *bufa, ulv *bufb, size_t count) {
     printf("           ");
     fflush(stdout);
     for (j = 0; j < 64; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         q = (j % 2) == 0 ? UL_ONEBITS : 0;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
         for (i = 0; i < count; i++) {
             *p1++ = *p2++ = (i % 2) == 0 ? q : ~q;
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -268,23 +268,23 @@ int test_checkerboard_comparison(ulv *bufa, ulv *bufb, size_t count) {
     printf("           ");
     fflush(stdout);
     for (j = 0; j < 64; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         q = (j % 2) == 0 ? CHECKERBOARD1 : CHECKERBOARD2;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
         for (i = 0; i < count; i++) {
             *p1++ = *p2++ = (i % 2) == 0 ? q : ~q;
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -295,25 +295,25 @@ int test_blockseq_comparison(ulv *bufa, ulv *bufb, size_t count) {
     unsigned int j;
     size_t i;
 
-    dprintf("           ");
+    tprintf("           ");
     fflush(stdout);
     for (j = 0; j < 256; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         for (i = 0; i < count; i++) {
             *p1++ = *p2++ = (ul) UL_BYTE(j);
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -327,10 +327,10 @@ int test_walkbits0_comparison(ulv *bufa, ulv *bufb, size_t count) {
     printf("           ");
     fflush(stdout);
     for (j = 0; j < UL_LEN * 2; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         for (i = 0; i < count; i++) {
             if (j < UL_LEN) { /* Walk it up. */
@@ -339,14 +339,14 @@ int test_walkbits0_comparison(ulv *bufa, ulv *bufb, size_t count) {
                 *p1++ = *p2++ = ONE << (UL_LEN * 2 - j - 1);
             }
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -357,13 +357,13 @@ int test_walkbits1_comparison(ulv *bufa, ulv *bufb, size_t count) {
     unsigned int j;
     size_t i;
 
-    dprintf("           ");
+    tprintf("           ");
     fflush(stdout);
     for (j = 0; j < UL_LEN * 2; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         for (i = 0; i < count; i++) {
             if (j < UL_LEN) { /* Walk it up. */
@@ -372,14 +372,14 @@ int test_walkbits1_comparison(ulv *bufa, ulv *bufb, size_t count) {
                 *p1++ = *p2++ = UL_ONEBITS ^ (ONE << (UL_LEN * 2 - j - 1));
             }
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -390,13 +390,13 @@ int test_bitspread_comparison(ulv *bufa, ulv *bufb, size_t count) {
     unsigned int j;
     size_t i;
 
-    dprintf("           ");
+    tprintf("           ");
     fflush(stdout);
     for (j = 0; j < UL_LEN * 2; j++) {
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
         p1 = (ulv *) bufa;
         p2 = (ulv *) bufb;
-        dprintf("setting %3u", j);
+        tprintf("setting %3u", j);
         fflush(stdout);
         for (i = 0; i < count; i++) {
             if (j < UL_LEN) { /* Walk it up. */
@@ -411,14 +411,14 @@ int test_bitspread_comparison(ulv *bufa, ulv *bufb, size_t count) {
                                     | (ONE << (UL_LEN * 2 + 1 - j)));
             }
         }
-        dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-        dprintf("testing %3u", j);
+        tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+        tprintf("testing %3u", j);
         fflush(stdout);
         if (compare_regions(bufa, bufb, count)) {
             return -1;
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
@@ -430,29 +430,29 @@ int test_bitflip_comparison(ulv *bufa, ulv *bufb, size_t count) {
     ul q;
     size_t i;
 
-    dprintf("           ");
+    tprintf("           ");
     fflush(stdout);
     for (k = 0; k < UL_LEN; k++) {
         q = ONE << k;
         for (j = 0; j < 8; j++) {
-            dprintf("\b\b\b\b\b\b\b\b\b\b\b");
+            tprintf("\b\b\b\b\b\b\b\b\b\b\b");
             q = ~q;
-            dprintf("setting %3u", k * 8 + j);
+            tprintf("setting %3u", k * 8 + j);
             fflush(stdout);
             p1 = (ulv *) bufa;
             p2 = (ulv *) bufb;
             for (i = 0; i < count; i++) {
                 *p1++ = *p2++ = (i % 2) == 0 ? q : ~q;
             }
-            dprintf("\b\b\b\b\b\b\b\b\b\b\b");
-            dprintf("testing %3u", k * 8 + j);
+            tprintf("\b\b\b\b\b\b\b\b\b\b\b");
+            tprintf("testing %3u", k * 8 + j);
             fflush(stdout);
             if (compare_regions(bufa, bufb, count)) {
                 return -1;
             }
         }
     }
-    dprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
+    tprintf("\b\b\b\b\b\b\b\b\b\b\b           \b\b\b\b\b\b\b\b\b\b\b");
     fflush(stdout);
     return 0;
 }
-- 
2.25.1

